{"ast":null,"code":"import { Grid, Formatters, Editors } from 'slickgrid-es6';\nimport data from './example_data.js';\nconst flatPickrOptions = {\n  dateFormat: 'd/m/Y',\n  parseDate: function (input) {\n    var split = input.split('/');\n    return new Date(split[1] + '-' + split[0] + '-' + split[2]);\n  }\n};\n\nfunction requiredFieldValidator(value) {\n  if (value === null || value === undefined || !value.length) {\n    return {\n      valid: false,\n      msg: 'This is a required field'\n    };\n  } else {\n    return {\n      valid: true,\n      msg: null\n    };\n  }\n}\n\nconst columns = [{\n  id: 'start',\n  name: 'Start',\n  field: 'start',\n  minWidth: 60,\n  editor: Editors.Date,\n  options: {\n    date: flatPickrOptions\n  }\n}, {\n  id: 'title',\n  name: 'Title',\n  field: 'title',\n  cssClass: 'cell-title',\n  editor: Editors.Text,\n  maxWidth: 100,\n  minWidth: 80,\n  validator: requiredFieldValidator\n}, {\n  id: 'duration',\n  name: 'Duration',\n  field: 'duration',\n  resizable: false\n}, {\n  id: '%',\n  name: '% Complete',\n  field: 'percentComplete',\n  formatter: Formatters.PercentCompleteBar\n}, {\n  id: 'start',\n  name: 'Start',\n  field: 'start',\n  editor: Editors.Date,\n  options: {\n    date: flatPickrOptions\n  }\n}, {\n  id: 'finish',\n  name: 'Finish',\n  field: 'finish'\n}, {\n  id: 'effort-driven',\n  name: 'Effort Driven',\n  field: 'effortDriven'\n}, {\n  id: 'title',\n  name: 'Title',\n  field: 'title',\n  maxWidth: 100,\n  minWidth: 80\n}, {\n  id: 'duration',\n  name: 'Duration',\n  field: 'duration',\n  resizable: false\n}, {\n  id: '%',\n  name: '% Complete',\n  field: 'percentComplete',\n  formatter: Formatters.PercentCompleteBar\n}, {\n  id: 'start',\n  name: 'Start',\n  field: 'start',\n  editor: Editors.Date,\n  options: {\n    date: flatPickrOptions\n  }\n}, {\n  id: 'finish',\n  name: 'Finish',\n  field: 'finish'\n}, {\n  id: 'effort-driven',\n  name: 'Effort Driven',\n  field: 'effortDriven'\n}, {\n  id: 'title',\n  name: 'Title',\n  field: 'title',\n  maxWidth: 100,\n  minWidth: 80\n}, {\n  id: 'duration',\n  name: 'Duration',\n  field: 'duration',\n  resizable: false\n}, {\n  id: '%',\n  name: '% Complete',\n  field: 'percentComplete',\n  formatter: Formatters.PercentCompleteBar\n}, {\n  id: 'start',\n  name: 'Start',\n  field: 'start',\n  editor: Editors.Date,\n  options: {\n    date: flatPickrOptions\n  }\n}, {\n  id: 'finish',\n  name: 'Finish',\n  field: 'finish'\n}, {\n  id: 'effort-driven',\n  name: 'Effort Driven',\n  field: 'effortDriven'\n}];\nconst options = {\n  enableCellNavigation: true,\n  enableColumnReorder: true,\n  forceFitColumns: !true,\n  frozenColumn: 0,\n  frozenRow: 1,\n  editable: true,\n  enableAddRow: true,\n  asyncEditorLoading: false,\n  autoEdit: false\n};\nexport default (() => new Grid(\"#myGrid\", data, columns, options));","map":{"version":3,"sources":["/Users/abhilashrj/Documents/iCargoPOC/components/spreadsheet/src/slickgrid.js"],"names":["Grid","Formatters","Editors","data","flatPickrOptions","dateFormat","parseDate","input","split","Date","requiredFieldValidator","value","undefined","length","valid","msg","columns","id","name","field","minWidth","editor","options","date","cssClass","Text","maxWidth","validator","resizable","formatter","PercentCompleteBar","enableCellNavigation","enableColumnReorder","forceFitColumns","frozenColumn","frozenRow","editable","enableAddRow","asyncEditorLoading","autoEdit"],"mappings":"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","sourcesContent":["import { Grid, Formatters, Editors} from 'slickgrid-es6';\nimport data from './example_data.js';\n\nconst flatPickrOptions = {\n  dateFormat: 'd/m/Y',\n  parseDate: function(input){\n    var split = input.split('/');\n    return new Date(split[1] + '-' + split[0] + '-' + split[2]);\n  }\n};\n\nfunction requiredFieldValidator(value){\n  if (value === null || value === undefined || !value.length){\n    return {valid: false, msg: 'This is a required field'};\n  } else {\n    return {valid: true, msg: null};\n  }\n}\nconst columns = [\n  {id: 'start', name: 'Start', field: 'start', minWidth: 60, editor: Editors.Date, options: {\n    date: flatPickrOptions\n  }},\n  {id: 'title', name: 'Title', field: 'title', cssClass: 'cell-title', editor: Editors.Text, maxWidth: 100, minWidth: 80, validator: requiredFieldValidator},\n  {id: 'duration', name: 'Duration', field: 'duration', resizable: false},\n  {id: '%', name: '% Complete', field: 'percentComplete',formatter: Formatters.PercentCompleteBar},\n  {id: 'start', name: 'Start', field: 'start', editor: Editors.Date,options: {\n    date: flatPickrOptions\n  }},\n  {id: 'finish', name: 'Finish', field: 'finish'},\n  {id: 'effort-driven', name: 'Effort Driven', field: 'effortDriven'},\n  {id: 'title', name: 'Title', field: 'title', maxWidth: 100, minWidth: 80},\n  {id: 'duration', name: 'Duration', field: 'duration', resizable: false},\n  {id: '%', name: '% Complete', field: 'percentComplete',formatter: Formatters.PercentCompleteBar},\n  {id: 'start', name: 'Start', field: 'start', editor: Editors.Date,options: {\n    date: flatPickrOptions\n  }},\n  {id: 'finish', name: 'Finish', field: 'finish'},\n  {id: 'effort-driven', name: 'Effort Driven', field: 'effortDriven'},\n  {id: 'title', name: 'Title', field: 'title', maxWidth: 100, minWidth: 80},\n  {id: 'duration', name: 'Duration', field: 'duration', resizable: false},\n  {id: '%', name: '% Complete', field: 'percentComplete', formatter: Formatters.PercentCompleteBar},\n  {id: 'start', name: 'Start', field: 'start', editor: Editors.Date,options: {\n    date: flatPickrOptions\n  }},\n  {id: 'finish', name: 'Finish', field: 'finish'},\n  {id: 'effort-driven', name: 'Effort Driven', field: 'effortDriven'}\n];\nconst options = {\n  enableCellNavigation: true,\n  enableColumnReorder: true,\n  forceFitColumns: !true,\n  frozenColumn: 0,\n  frozenRow: 1,\n  editable: true,\n  enableAddRow: true,\n  asyncEditorLoading: false,\n  autoEdit: false\n};\nexport default () => new Grid(\"#myGrid\", data, columns, options);"]},"metadata":{},"sourceType":"module"}