{"ast":null,"code":"export const CustomFormatter = (row, cell, value, columnDef, dataContext) => {\n  let val;\n\n  switch (columnDef.name) {\n    case \"Flight No\":\n      val = value.flightno;\n      break;\n\n    case \"Flight Date\":\n      val = value.date;\n      break;\n\n    case \"Segment From\":\n      val = value.from;\n      break;\n\n    case \"Segment To\":\n      val = value.to;\n      break;\n\n    case \"Flight Model\":\n      val = value.flightModel;\n      break;\n\n    case \"Body Type\":\n      val = value.bodyType;\n      break;\n\n    case \"Type\":\n      val = value.type;\n      break;\n\n    case \"Start Time\":\n      val = value.startTime;\n      break;\n\n    case \"End Time\":\n      val = value.endTime;\n      break;\n\n    case \"Status\":\n      val = value.status;\n      break;\n\n    case \"Additional Status\":\n      val = value.additionalStatus;\n      break;\n\n    case \"Time Status\":\n      val = value.timeStatus;\n      break;\n\n    case \"Weight %\":\n      val = value.percentage;\n      break;\n\n    case \"Weight Value\":\n      val = value.value;\n      break;\n\n    case \"Volume %\":\n      val = value.percentage;\n      break;\n\n    case \"Volume Value\":\n      val = value.value;\n      break;\n\n    case \"Weight %\":\n      val = value.position;\n      break;\n\n    case \"Weight Value\":\n      val = value.value;\n      break;\n\n    case \"ULD Position1\":\n      val = value[0].position;\n      break;\n\n    case \"ULD Value1\":\n      val = value[0].value;\n      break;\n\n    case \"ULD Position2\":\n      val = value[1].position;\n      break;\n\n    case \"ULD Value2\":\n      val = value[1].value;\n      break;\n\n    case \"ULD Position3\":\n      val = value[2].position;\n      break;\n\n    case \"ULD Value3\":\n      val = value[2].value;\n      break;\n\n    case \"ULD Position4\":\n      val = value[3].position;\n      break;\n\n    case \"ULD Value4\":\n      val = value[3].value;\n      break;\n\n    case \"Revenue\":\n      val = value.revenue;\n      break;\n\n    case \"Yeild\":\n      val = value.yeild;\n      break;\n\n    case \"Booking SR\":\n      val = value.sr;\n      break;\n\n    case \"Booking Volume\":\n      val = value.volume;\n      break;\n\n    default:\n      val;\n      break;\n  }\n\n  return val;\n};","map":{"version":3,"sources":["/Users/abhilashrj/Documents/iCargoPOC/components/spreadsheet/src/utilities/iCargo.formatters.js"],"names":["CustomFormatter","row","cell","value","columnDef","dataContext","val","name","flightno","date","from","to","flightModel","bodyType","type","startTime","endTime","status","additionalStatus","timeStatus","percentage","position","revenue","yeild","sr","volume"],"mappings":"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","sourcesContent":["export const CustomFormatter = (row, cell, value, columnDef, dataContext) => {\n  let val;\n  switch (columnDef.name) {\n    case \"Flight No\":\n      val = value.flightno;\n      break;\n    case \"Flight Date\":\n      val = value.date;\n      break;\n    case \"Segment From\":\n      val = value.from;\n      break;\n    case \"Segment To\":\n      val = value.to;\n      break;\n    case \"Flight Model\":\n      val = value.flightModel;\n      break;\n    case \"Body Type\":\n      val = value.bodyType;\n      break;\n    case \"Type\":\n      val = value.type;\n      break;\n    case \"Start Time\":\n      val = value.startTime;\n      break;\n    case \"End Time\":\n      val = value.endTime;\n      break;\n    case \"Status\":\n      val = value.status;\n      break;\n    case \"Additional Status\":\n      val = value.additionalStatus;\n      break;\n    case \"Time Status\":\n      val = value.timeStatus;\n      break;\n    case \"Weight %\":\n      val = value.percentage;\n      break;\n    case \"Weight Value\":\n      val = value.value;\n      break;\n    case \"Volume %\":\n      val = value.percentage;\n      break;\n    case \"Volume Value\":\n      val = value.value;\n      break;\n    case \"Weight %\":\n      val = value.position;\n      break;\n    case \"Weight Value\":\n      val = value.value;\n      break;\n    case \"ULD Position1\":\n      val = value[0].position;\n      break;\n    case \"ULD Value1\":\n      val = value[0].value;\n      break;\n    case \"ULD Position2\":\n      val = value[1].position;\n      break;\n    case \"ULD Value2\":\n      val = value[1].value;\n      break;\n    case \"ULD Position3\":\n      val = value[2].position;\n      break;\n    case \"ULD Value3\":\n      val = value[2].value;\n      break;\n    case \"ULD Position4\":\n      val = value[3].position;\n      break;\n    case \"ULD Value4\":\n      val = value[3].value;\n      break;\n    case \"Revenue\":\n      val = value.revenue;\n      break;\n    case \"Yeild\":\n      val = value.yeild;\n      break;\n    case \"Booking SR\":\n      val = value.sr;\n      break;\n    case \"Booking Volume\":\n      val = value.volume;\n      break;\n    default: val\n    break;\n  }\n  return val;\n};\n"]},"metadata":{},"sourceType":"module"}