{"ast":null,"code":"var _jsxFileName = \"/Users/abhilashrj/Documents/iCargoPOC/components/spreadsheet/src/components/slickgrid.js\";\nimport { Grid, Formatters, Editors } from 'slickgrid-es6';\nimport data from '../stubs/sample_data';\nimport { requiredFieldValidator } from '../utilities/utils';\nconst flatPickrOptions = {\n  dateFormat: 'd/m/Y',\n  parseDate: function (input) {\n    var split = input.split('/');\n    return new Date(split[1] + '-' + split[0] + '-' + split[2]);\n  }\n};\n\nconst flightNumberFormatter = cell => {\n  return /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 4\n    }\n  }, cell.flightno);\n};\n\nconst flightDateFormatter = cell => {\n  return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }\n  }, cell.date);\n};\n\nconst columns = [{\n  id: 'travelId',\n  name: 'Travel Id',\n  field: 'travelId',\n  minWidth: 90,\n  editor: Editors.Date\n}, {\n  id: 'flight',\n  name: 'Flight No',\n  field: 'flight',\n  minWidth: 90,\n  editor: Editors.Text,\n  formatter: flightNumberFormatter\n}, {\n  id: 'flight',\n  name: 'Flight Date',\n  field: 'flight',\n  cssClass: 'cell-title',\n  editor: Editors.Text,\n  options: {\n    date: flatPickrOptions\n  },\n  maxWidth: 100,\n  minWidth: 80,\n  validator: requiredFieldValidator,\n  formatter: flightDateFormatter\n} // {id: 'duration', name: 'Segment From', field: 'segment', resizable: false},\n// {id: 'start', name: 'Segment To', field: 'segment', minWidth: 90, editor: Editors.Date,options: { date: flatPickrOptions }},\n// {id: 'finish', name: 'flightModel', field: 'details', minWidth: 90},\n// {id: 'effort-driven', name: 'bodyType', field: 'details'},\n// {id: 'title', name: 'type', field: 'details', maxWidth: 100, minWidth: 80},\n// {id: 'duration', name: 'startTime', field: 'details', resizable: false},\n// {id: 'start', name: 'endTime', field: 'details', minWidth: 90, editor: Editors.Date,options: { date: flatPickrOptions }},\n// {id: 'finish', name: 'status', field: 'details'},\n// {id: 'effort-driven', name: 'additionalStatus', field: 'details'},\n// {id: 'title', name: 'timeStatus', field: 'details', maxWidth: 100, minWidth: 80},\n// {id: 'duration', name: 'percentage', field: 'weight', resizable: false},\n// {id: 'finish', name: 'value', field: 'weight'},\n// {id: 'start', name: 'percentage', field: 'volume', minWidth: 90, editor: Editors.Date,options: { date: flatPickrOptions }},\n// {id: 'finish', name: 'value', field: 'volume'},\n// {id: 'effort-driven', name: 'position', field: 'uldPositions'},\n// {id: '%', name: 'value', field: 'uldPositions', formatter: Formatters.PercentCompleteBar}\n];\nconst options = {\n  enableCellNavigation: true,\n  enableColumnReorder: true,\n  forceFitColumns: !true,\n  frozenColumn: 0,\n  frozenRow: 1,\n  editable: true,\n  enableAddRow: true,\n  asyncEditorLoading: false,\n  autoEdit: false\n};\nexport default (() => new Grid(\"#iCargoSpreadSheet\", data, columns, options));","map":{"version":3,"sources":["/Users/abhilashrj/Documents/iCargoPOC/components/spreadsheet/src/components/slickgrid.js"],"names":["Grid","Formatters","Editors","data","requiredFieldValidator","flatPickrOptions","dateFormat","parseDate","input","split","Date","flightNumberFormatter","cell","color","flightno","flightDateFormatter","date","columns","id","name","field","minWidth","editor","Text","formatter","cssClass","options","maxWidth","validator","enableCellNavigation","enableColumnReorder","forceFitColumns","frozenColumn","frozenRow","editable","enableAddRow","asyncEditorLoading","autoEdit"],"mappings":";AAAA,SAASA,IAAT,EAAeC,UAAf,EAA2BC,OAA3B,QAAyC,eAAzC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,SAAQC,sBAAR,QAAqC,oBAArC;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,UAAU,EAAE,OADW;AAEvBC,EAAAA,SAAS,EAAE,UAASC,KAAT,EAAe;AACxB,QAAIC,KAAK,GAAGD,KAAK,CAACC,KAAN,CAAY,GAAZ,CAAZ;AACA,WAAO,IAAIC,IAAJ,CAASD,KAAK,CAAC,CAAD,CAAL,GAAW,GAAX,GAAiBA,KAAK,CAAC,CAAD,CAAtB,GAA4B,GAA5B,GAAkCA,KAAK,CAAC,CAAD,CAAhD,CAAP;AACD;AALsB,CAAzB;;AAQA,MAAME,qBAAqB,GAAIC,IAAD,IAAU;AACvC,sBACE;AAAG,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BD,IAAI,CAACE,QAAlC,CADF;AAGA,CAJD;;AAKA,MAAMC,mBAAmB,GAAIH,IAAD,IAAU;AACrC,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,IAAI,CAACI,IAAT,CADF;AAGA,CAJD;;AAMA,MAAMC,OAAO,GAAG,CACd;AAACC,EAAAA,EAAE,EAAE,UAAL;AAAiBC,EAAAA,IAAI,EAAE,WAAvB;AAAoCC,EAAAA,KAAK,EAAE,UAA3C;AAAuDC,EAAAA,QAAQ,EAAE,EAAjE;AAAqEC,EAAAA,MAAM,EAAEpB,OAAO,CAACQ;AAArF,CADc,EAEd;AAACQ,EAAAA,EAAE,EAAE,QAAL;AAAeC,EAAAA,IAAI,EAAE,WAArB;AAAkCC,EAAAA,KAAK,EAAE,QAAzC;AAAmDC,EAAAA,QAAQ,EAAE,EAA7D;AAAiEC,EAAAA,MAAM,EAAEpB,OAAO,CAACqB,IAAjF;AAAsFC,EAAAA,SAAS,EAAEb;AAAjG,CAFc,EAGd;AAACO,EAAAA,EAAE,EAAE,QAAL;AAAeC,EAAAA,IAAI,EAAE,aAArB;AAAoCC,EAAAA,KAAK,EAAE,QAA3C;AAAqDK,EAAAA,QAAQ,EAAE,YAA/D;AAA6EH,EAAAA,MAAM,EAAEpB,OAAO,CAACqB,IAA7F;AAAkGG,EAAAA,OAAO,EAAE;AAAEV,IAAAA,IAAI,EAAEX;AAAR,GAA3G;AAAuIsB,EAAAA,QAAQ,EAAE,GAAjJ;AAAsJN,EAAAA,QAAQ,EAAE,EAAhK;AAAoKO,EAAAA,SAAS,EAAExB,sBAA/K;AAAuMoB,EAAAA,SAAS,EAAET;AAAlN,CAHc,CAId;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBc,CAAhB;AAqBA,MAAMW,OAAO,GAAG;AACdG,EAAAA,oBAAoB,EAAE,IADR;AAEdC,EAAAA,mBAAmB,EAAE,IAFP;AAGdC,EAAAA,eAAe,EAAE,CAAC,IAHJ;AAIdC,EAAAA,YAAY,EAAE,CAJA;AAKdC,EAAAA,SAAS,EAAE,CALG;AAMdC,EAAAA,QAAQ,EAAE,IANI;AAOdC,EAAAA,YAAY,EAAE,IAPA;AAQdC,EAAAA,kBAAkB,EAAE,KARN;AASdC,EAAAA,QAAQ,EAAE;AATI,CAAhB;AAWA,gBAAe,MAAM,IAAIrC,IAAJ,CAAS,oBAAT,EAA+BG,IAA/B,EAAqCc,OAArC,EAA8CS,OAA9C,CAArB","sourcesContent":["import { Grid, Formatters, Editors} from 'slickgrid-es6';\nimport data from '../stubs/sample_data';\nimport {requiredFieldValidator} from '../utilities/utils'\n\nconst flatPickrOptions = {\n  dateFormat: 'd/m/Y', \n  parseDate: function(input){\n    var split = input.split('/');\n    return new Date(split[1] + '-' + split[0] + '-' + split[2]);\n  }\n};\n\nconst flightNumberFormatter = (cell) => {\n\treturn (\n\t\t\t<p style={{ color: \"red\" }}>{cell.flightno}</p>\n\t);\n};\nconst flightDateFormatter = (cell) => {\n\treturn (\n\t\t\t<p>{cell.date}</p>\n\t);\n};\n\nconst columns = [\n  {id: 'travelId', name: 'Travel Id', field: 'travelId', minWidth: 90, editor: Editors.Date},\n  {id: 'flight', name: 'Flight No', field: 'flight', minWidth: 90, editor: Editors.Text,formatter: flightNumberFormatter},\n  {id: 'flight', name: 'Flight Date', field: 'flight', cssClass: 'cell-title', editor: Editors.Text,options: { date: flatPickrOptions }, maxWidth: 100, minWidth: 80, validator: requiredFieldValidator, formatter: flightDateFormatter},\n  // {id: 'duration', name: 'Segment From', field: 'segment', resizable: false},\n  // {id: 'start', name: 'Segment To', field: 'segment', minWidth: 90, editor: Editors.Date,options: { date: flatPickrOptions }},\n  // {id: 'finish', name: 'flightModel', field: 'details', minWidth: 90},\n  // {id: 'effort-driven', name: 'bodyType', field: 'details'},\n  // {id: 'title', name: 'type', field: 'details', maxWidth: 100, minWidth: 80},\n  // {id: 'duration', name: 'startTime', field: 'details', resizable: false},\n  // {id: 'start', name: 'endTime', field: 'details', minWidth: 90, editor: Editors.Date,options: { date: flatPickrOptions }},\n  // {id: 'finish', name: 'status', field: 'details'},\n  // {id: 'effort-driven', name: 'additionalStatus', field: 'details'},\n  // {id: 'title', name: 'timeStatus', field: 'details', maxWidth: 100, minWidth: 80},\n  // {id: 'duration', name: 'percentage', field: 'weight', resizable: false},\n  // {id: 'finish', name: 'value', field: 'weight'},\n  // {id: 'start', name: 'percentage', field: 'volume', minWidth: 90, editor: Editors.Date,options: { date: flatPickrOptions }},\n  // {id: 'finish', name: 'value', field: 'volume'},\n  // {id: 'effort-driven', name: 'position', field: 'uldPositions'},\n  // {id: '%', name: 'value', field: 'uldPositions', formatter: Formatters.PercentCompleteBar}\n];\nconst options = {\n  enableCellNavigation: true,\n  enableColumnReorder: true,\n  forceFitColumns: !true,\n  frozenColumn: 0,\n  frozenRow: 1,\n  editable: true,\n  enableAddRow: true,\n  asyncEditorLoading: false,\n  autoEdit: false\n};\nexport default () => new Grid(\"#iCargoSpreadSheet\", data, columns, options);"]},"metadata":{},"sourceType":"module"}